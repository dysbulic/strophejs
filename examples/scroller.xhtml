<!DOCTYPE html PUBLIC
  "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Scroller Interface</title>
  <script type="application/javascript" src=".../lib/jquery/jquery.js"/>
  <script type="application/javascript" src=".../lib/strophe/strophe.js"/>
  <script type="application/javascript" src="scroller.jquery"/>
  <script type="application/javascript"><![CDATA[
      function Position( start, end ) {
          this.__defineGetter__( 'now', function() {
              var offset =
                  Math.min(
                      1,
                      ( ( ( new Date() ).getTime() - start.time )
                        / ( end.time - start.time ) )
                  )
              return {
                  x : offset * ( end.x - start.x ),
                  y : offset * ( end.y - start.y ),
              }
          } )
      }

      function Animatable() {
          var self = this
          var args = Array.prototype.slice.call( arguments )

          this.interval = {
              id: undefined,
              length: 30 /* seconds */ * 1000,
          }

          this.__defineGetter__( 'go', function() {
              if( this.interval.id === undefined ) {
                  this.interval.id =
                      setInterval(
                          function() {
                              arguments.callee.apply(
                                  self, args
                              )
                          },
                          this.interval.length
                      )
              }
          } )
          this.__defineGetter__( 'stop', function() {
              if( this.interval.id !== undefined ) {
                  clearInterval( this.interval.id )
                  
              }
          } )
      }
      
      function Scroller() {
          var root = document.documentElement
          var win = {
              width : root.clientWidth,
              height : root.clientHeight,
          }
          var start = {
              x : ( root.scrollLeft
                    + root.clientWidth / 2 ),
              y: ( root.scrollTop
                   + root.clientHeight / 2 ),
              width: win.width,
              height: win.height,
                  width: root.clientWidth,
                  height: root.clientHeight,
              }
              var cnvs = {
                  width : root.scrollWidth,
                  height : root.scrollHeight,
              }

      }

      $(window).bind( 'scroll', function() {
          console.log('hi')
      } )
    
      $( function() {
          function scroll() {
              var state = {
                  last : {
                  },
                  win : win,
                  canvas : cnvs,
                  count : count,
                  offset : offset,
              }
              state['start'] = start = start || {
                  time : ( new Date() ).getTime(),
                  x : state.last.x,
                  y : state.last.y,
              }
              state['end'] = end = end || $.merge( {
                  time : ( new Date() ).getTime(),
                },
                ( {
                  get top() { return {
                      get left() { return {
                          x : win.width / 2,
                          y : win.height / 2,
                      } },
                      get right() { return {
                          x : cvs.width - win.width / 2,
                          y : win.height / 2,
                      } },
                  } },
                    get bottom() { return {
                        get left() { return {
                            x : win.width / 2,
                            y : cnvs.height - win.height / 2,
                        } },
                        get right() { return {
                            x : cnvs.width - win.width / 2,
                            y : cnvs.height - win.height / 2,
                        } },
                    } }
                } ).bottom.left
                                                 )
              var callTime = new Date()
              var offset = ( ( callTime.getTime() - startTime.getTime() )
                             / ( moveTime * 1000 ) )
            // The box covers the total space in a maximum of
            // 'time' units.
            var move = position( )
            console.log( move )
            if( move ) window.scroll( move.x, move.y )
        }
        //scroll()
        setInterval( scroll, 1000 )
    } )
  ]]></script>
  <style type="text/css">
    html, body { margin: 0; min-height: 2000px }
    form { float: left }
    label:after { content: ":" }
    label { display: inline-block; min-width: 5.5em; text-align: right }
    li:last-child button { float: right }
    li { list-style: none; padding: .1em 0 }
    body > ol { margin: 0; padding: 0 }
    body > ol > li:before, body > ol > li:after {
      content: ''; clear: both; display: block
    }
    body > ol > li { border-style: double none; padding: 1em;
                     border-width: 3px; margin-top: -3px }
    body > ol > li:first-child { margin-top: 3px; border-color: blue }
  </style>
</head>
<body>
  <ol id="log"/>
  <ol id="action">
    <li>
      <form id="connect" action="">
        <fieldset>
          <legend>XMPP Connect?</legend>
          <ul>
            <li>
              <label for="user"><acronym title="identifier">ID</acronym></label>
              <input id="user" type="text" value="mimis.test@gmail.com" />
            </li>
            <li>
              <label for="server">Server</label>
              <input id="server" type="text" value="talk.google.com" />
            </li>
            <li>
              <label for="pass">Password</label>
              <input id="pass" type="password" value="mimistest" />
            </li>
          </ul>
        </fieldset>
      </form>
    </li>
  </ol>
</body>
</html>
