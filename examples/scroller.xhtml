<!DOCTYPE html PUBLIC
  "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Scroller Interface</title>
  <script type="application/javascript" src=".../lib/jquery/jquery.js"/>
  <script type="application/javascript" src=".../lib/strophe/strophe.js"/>
  <script type="application/javascript" src="scroller.jquery"/>
  <script type="application/javascript"><![CDATA[
      var moveTime = 30 // seconds
      function position( state ) {
          var win = state['win']
          var last = state['last']
          var cnvs = state['canvas']
          var dest = ( {
              get top() { return {
                  get left() { return {
                      x : win.width / 2,
                      y : win.height / 2,
                  } },
                  get right() { return {
                      x : cvs.width - win.width / 2,
                      y : win.height / 2,
                  } },
              } },
              get bottom() { return {
                  get left() { return {
                      x : win.width / 2,
                      y : cnvs.height - win.height / 2,
                  } },
                  get right() { return {
                      x : cnvs.width - win.width / 2,
                      y : cnvs.height - win.height / 2,
                  } },
              } }
          } ).bottom.left
          
          var start = state['start']
          var end   = state['end']
          var offset = ( ( new Date() ).getTime() - start.time ) / ( moveTime * 1000 )
          var ideal = {
              x : offset * ( end.x - start.x 
        var pos = ( offset >= 1
                      ? dest
                      : ( function() {
                            var ctr = {
                                x : win.x + win.width / 2,
                                y : win.y + win.height / 2,
                            }
                            return {
                                x: offset * (dest.x - ctr.x),
                                y: offset * (dest.y - ctr.y),
                            }
                      } )() )
        pos.x -= win.width / 2
        pos.y -= win.height / 2
        pos.toString = function() { return '<' + pos.x + ', ' + pos.y + '>' }
        
        return pos
    }
    $( function() {
        var startTime
        var total = 0
        function scroll() {
            startTime = startTime || new Date()
            var count = ++total
            var callTime = new Date()
            var offset = ( ( callTime.getTime() - startTime.getTime() )
                           / ( moveTime * 1000 ) )
            // The box covers the total space in a maximum of
            // 'time' units.
            var move = position( {
                canvas : {
                    width : document.documentElement.scrollWidth,
                    height : document.documentElement.scrollHeight,
                },
                last : {
                    x : ( document.documentElement.scrollLeft
                          + document.documentElement.clientWidth / 2 ),
                    y: ( document.documentElement.scrollTop
                         + document.documentElement.clientHeight / 2 ),
                    width: document.documentElement.clientWidth,
                    height: document.documentElement.clientHeight,
                },
                win : {
                    width: document.documentElement.clientWidth,
                    height: document.documentElement.clientHeight,
                },
                count : count,
                offset : offset,
            } )
            console.log( move )
            if( move ) window.scroll( move.x, move.y )
        }
        //scroll()
        setInterval( scroll, 1000 )
    } )
  ]]></script>
  <style type="text/css">
    html, body { margin: 0; min-height: 2000px }
    form { float: left }
    label:after { content: ":" }
    label { display: inline-block; min-width: 5.5em; text-align: right }
    li:last-child button { float: right }
    li { list-style: none; padding: .1em 0 }
    body > ol { margin: 0; padding: 0 }
    body > ol > li:before, body > ol > li:after {
      content: ''; clear: both; display: block
    }
    body > ol > li { border-style: double none; padding: 1em;
                     border-width: 3px; margin-top: -3px }
    body > ol > li:first-child { margin-top: 3px; border-color: blue }
  </style>
</head>
<body>
  <ol id="log"/>
  <ol id="action">
    <li>
      <form id="connect" action="">
        <fieldset>
          <legend>XMPP Connect?</legend>
          <ul>
            <li>
              <label for="user"><acronym title="identifier">ID</acronym></label>
              <input id="user" type="text" value="mimis.test@gmail.com" />
            </li>
            <li>
              <label for="server">Server</label>
              <input id="server" type="text" value="talk.google.com" />
            </li>
            <li>
              <label for="pass">Password</label>
              <input id="pass" type="password" value="mimistest" />
            </li>
          </ul>
        </fieldset>
      </form>
    </li>
  </ol>
</body>
</html>
